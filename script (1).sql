SET SQL_SAFE_UPDATES = 0;

DROP DATABASE IF EXISTS DBCANTINA;
CREATE DATABASE DBCANTINA;

USE DBCANTINA;

CREATE TABLE CLIENTE (
	IDCLIENTE INT NOT NULL AUTO_INCREMENT
	, NOME VARCHAR(100)
	, SEXO CHAR(1)
	, PRIMARY KEY (IDCLIENTE)
);

CREATE TABLE PRODUTO (
	IDPRODUTO INT NOT NULL AUTO_INCREMENT
	, NOME VARCHAR(100)
	, PRECO NUMERIC(8,2)
	, CATEGORIA VARCHAR(50)
	, PRIMARY KEY (IDPRODUTO)
);

CREATE TABLE PEDIDO (
	IDPEDIDO INT NOT NULL AUTO_INCREMENT
	, IDCLIENTE INT NOT NULL
	, DTPEDIDO DATE
	, PRIMARY KEY(IDPEDIDO)
	, FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE (IDCLIENTE)
);

CREATE TABLE ITEM_PEDIDO (
	IDPEDIDO INT NOT NULL 
	, IDPRODUTO INT NOT NULL
	, QTDE INT
	, PRECO_UNITARIO NUMERIC(8,2)
	, PRIMARY KEY (IDPEDIDO, IDPRODUTO)
	, FOREIGN KEY (IDPEDIDO) REFERENCES PEDIDO (IDPEDIDO)
	, FOREIGN KEY (IDPRODUTO) REFERENCES PRODUTO (IDPRODUTO)
);

INSERT INTO CLIENTE (NOME, SEXO)VALUES('JOAO', 'M');
INSERT INTO CLIENTE (NOME, SEXO)VALUES('MARIA', 'F');
INSERT INTO CLIENTE (NOME, SEXO)VALUES('ANA', 'F');
INSERT INTO CLIENTE (NOME, SEXO)VALUES('CARLOS', 'M');
INSERT INTO CLIENTE (NOME, SEXO)VALUES('ANTONIO', 'M');

INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('BOLO DE CHOCOLATE', 2.5, 'DOCE');
INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('BOLO DE CENOURA', 2.5, 'DOCE');
INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('SUCO DE LARANJA', 3.0, 'SUCO');
INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('SUCO DE MORANGO', 4.0, 'SUCO');
INSERT INTO PRODUTO (NOME, PRECO, CATEGORIA)VALUES('MISTO QUENTE', 1.5, 'SALGADO');

INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(3, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(5, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(3, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(5, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(1, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));
INSERT INTO PEDIDO (IDCLIENTE, DTPEDIDO)VALUES(2, DATE_ADD(NOW(), INTERVAL RAND() * - 100 DAY));

INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (01, 1, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (02, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (03, 3, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (01, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (02, 1, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (04, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (05, 5, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (06, 1, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (05, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (07, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (08, 3, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (11, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (12, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (10, 3, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (11, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (09, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (09, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (10, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (11, 5, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (12, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (10, 5, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (11, 1, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (14, 2, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (15, 5, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (13, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (14, 4, RAND() * 10);
INSERT INTO ITEM_PEDIDO (IDPEDIDO, IDPRODUTO, QTDE)VALUES (15, 3, RAND() * 10);

UPDATE ITEM_PEDIDO AS PED
SET PRECO_UNITARIO = (SELECT PRECO FROM PRODUTO WHERE IDPRODUTO = PED.IDPRODUTO);

    -- QUESTAO 01
SELECT 
    SEXO, 
    COUNT(*) AS QTD_CLIENTES
FROM CLIENTE
GROUP BY SEXO;

    -- QUESTAO 02
SELECT 
	PRODUTO.NOME,
    PRODUTO.PRECO,
    PRODUTO.CATEGORIA
FROM 
	PRODUTO
ORDER BY
	PRODUTO.CATEGORIA,
    PRODUTO.NOME;
    
-- QUESTAO 03
SELECT 
CATEGORIA,
COUNT(*) AS QTDE_PRODUTOS, AVG(PRECO) AS MEDIA_PRECO
FROM PRODUTO
GROUP BY CATEGORIA 
ORDER BY CATEGORIA;

-- QUESTAO 04
SELECT 
ITEM_PEDIDO.IDPRODUTO,
SUM(ITEM_PEDIDO.QTDE) AS QUANTIDADE_VENDIDA,
ITEM_PEDIDO.PRECO_UNITARIO
FROM 
ITEM_PEDIDO
GROUP BY IDPRODUTO, ITEM_PEDIDO.PRECO_UNITARIO
ORDER BY IDPRODUTO;

-- QUESTAO 05
SELECT 
IDPEDIDO,
IDPRODUTO,
PRECO_UNITARIO,
QTDE AS QTDE_VENDIDA,
(PRECO_UNITARIO*QTDE) AS TOTAL_ITEM_PEDIDO
FROM 
ITEM_PEDIDO
ORDER BY
IDPEDIDO, IDPRODUTO;

-- QUESTAO 06
SELECT
COUNT(DISTINCT IDPEDIDO) AS QTDE_PEDIDOS,
AVG(QTDE) AS ITEM_VENDIDO_MEDIA,
AVG (QTDE*PRECO_UNITARIO) AS VALOR_TOTAL_MEDIO
FROM 
ITEM_PEDIDO;

-- QUESTAO 07
SELECT *
FROM PEDIDO
WHERE IDCLIENTE =3;

-- QUESTAO 08
SELECT 
CLIENTE.IDCLIENTE,
CLIENTE.NOME,
COUNT(PEDIDO.IDPEDIDO) AS QTDE_TOTAL
FROM 
CLIENTE 
INNER JOIN PEDIDO
ON CLIENTE.IDCLIENTE = PEDIDO.IDCLIENTE
GROUP BY CLIENTE.NOME, CLIENTE.IDCLIENTE
ORDER BY IDCLIENTE;

-- QUESTAO 09
SELECT 
CLIENTE.IDCLIENTE,
CLIENTE.NOME,
COUNT(PEDIDO.IDPEDIDO) AS TORAL_PEDIDO
FROM CLIENTE 
LEFT JOIN PEDIDO ON
CLIENTE.IDCLIENTE=PEDIDO.IDCLIENTE
GROUP BY
CLIENTE.IDCLIENTE, CLIENTE.NOME
ORDER BY
CLIENTE.IDCLIENTE;

-- QUESTAO 10
SELECT 
PRODUTO.IDPRODUTO,
PRODUTO.NOME,
COUNT(DISTINCT ITEM_PEDIDO.IDPEDIDO) AS QTDE_PEDIDOS,
SUM(ITEM_PEDIDO.QTDE) AS QTDE_VENDIDA,
AVG(ITEM_PEDIDO.QTDE) AS MEDIA_VENDIDA
FROM 
PRODUTO
INNER JOIN ITEM_PEDIDO ON
PRODUTO.IDPRODUTO = ITEM_PEDIDO.IDPRODUTO
GROUP BY 
PRODUTO.IDPRODUTO,
PRODUTO.NOME
ORDER BY
QTDE_VENDIDA;

-- QUESTAO 11
SELECT 
PRODUTO.NOME,
SUM(ITEM_PEDIDO.QTDE) AS QTDE_VENDIDA
FROM PRODUTO
LEFT JOIN ITEM_PEDIDO ON
ITEM_PEDIDO.IDPRODUTO = PRODUTO.IDPRODUTO
GROUP BY 
PRODUTO.NOME;

-- QUESTAO 12
SELECT 
CLIENTE.IDCLIENTE,
CLIENTE.NOME,
COUNT(PEDIDO.IDPEDIDO) AS PEDIDO_CLIENTE
FROM PEDIDO 
INNER JOIN CLIENTE
ON CLIENTE.IDCLIENTE=PEDIDO.IDCLIENTE
GROUP BY 
CLIENTE.IDCLIENTE,
CLIENTE.NOME
HAVING 
COUNT(PEDIDO.IDPEDIDO) >5
ORDER BY 
PEDIDO_CLIENTE DESC;

-- QUESTAO 13
SELECT
PEDIDO.IDPEDIDO,
PEDIDO.DTPEDIDO,
CLIENTE.IDCLIENTE,
CLIENTE.NOME,
PRODUTO.IDPRODUTO,
PRODUTO.NOME,
ITEM_PEDIDO.PRECO_UNITARIO,
ITEM_PEDIDO.QTDE AS QTDA_VENDIDA
FROM PEDIDO
INNER JOIN CLIENTE
    ON CLIENTE.IDCLIENTE = PEDIDO.IDCLIENTE
INNER JOIN ITEM_PEDIDO
    ON ITEM_PEDIDO.IDPEDIDO = PEDIDO.IDPEDIDO
INNER JOIN PRODUTO
    ON PRODUTO.IDPRODUTO = ITEM_PEDIDO.IDPRODUTO
WHERE PEDIDO.IDPEDIDO = 10
ORDER BY PRODUTO.IDPRODUTO;

-- QUESTAO 14
SELECT
    CLIENTE.SEXO,
    PRODUTO.CATEGORIA,
    SUM(ITEM_PEDIDO.QTDE) AS TOTAL_VENDIDO
FROM CLIENTE
INNER JOIN PEDIDO
    ON CLIENTE.IDCLIENTE = PEDIDO.IDCLIENTE
INNER JOIN ITEM_PEDIDO
    ON PEDIDO.IDPEDIDO = ITEM_PEDIDO.IDPEDIDO
INNER JOIN PRODUTO
    ON ITEM_PEDIDO.IDPRODUTO = PRODUTO.IDPRODUTO
GROUP BY
    CLIENTE.SEXO,
    PRODUTO.CATEGORIA
ORDER BY
    CLIENTE.SEXO,
    PRODUTO.CATEGORIA;


	
	
    
    
    

